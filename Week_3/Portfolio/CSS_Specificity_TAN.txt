Specificity is applied to a given CSS decleration, it will be determined by the number of selector type. specificity has three types, which are: type, class, and ID selectors. 
Specificity Hierarchy:
1. Inline styles: attached to the elements style
2. IDs: unique identifier for the page element
3. Classes, attributes and pseudo-classes: classes
4. Elements and pseudo-elements: h1, div, :before and :after

You should avoid some rules of thumb: 
1. Always try to use specificity
2. Use on page-specific CSS that overrides foreign CSS
3. Don't use when you are writing plugin
4. Don't use on site-wide CSS

Equal specificity: the latest rule counts
Another rule for CSS with !important that either make the selector with a higher specificity or add a CSS rule with the same rule for selector at a later than existing one. The last rule will win.
In specificity tie, the last rule will win. 
The negation pseudo-class :not() is not a  pseudo-class in specificity calculation. The normal selectors ( selector types) is also as negation pseudo-class
ID selectors have a higher specificity than attribute selectors
Contextual selectors are more specific than a single element selector
A class selector beats any number of element selectors. The class .intro will beat h1, div Inherited values have a specificity of 0.




LINK:https://www.w3schools.com/css/css_specificity.asp